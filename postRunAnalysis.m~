function postDataAnalysis(logFile)
    load(logFile, 'testInfo');
    [~,numTests] = size(testInfo);
    predDataPoints = zeros(numTests,4);
    estDataPoints = zeros(numTests, 4);
    
    for i=1:numTests
        intermediate = testInfo(i);
        predDataPoints(i,1) = intermediate{1}.predictionMSE;
        predDataPoints(i,2) = intermediate{1}.riccatiConvergencePred;
        predDataPoints(i,3) = intermediate{1}.LS_PredMSE;
        predDataPoints(i,4) = intermediate{1}.KF_PredMSE;
        
        estDataPoints(i,1) = intermediate{1}.estimatedMSE;
        estDataPoints(i,2) = intermediate{1}.riccatiConvergenceEst;
        estDataPoints(i,3) = intermediate{1}.LS_EstMSE;
        estDataPoints(i,4) = intermediate{1}.KF_PredMSE;
    end
    hold on;
    TCN_PMSE = plot(predDataPoints(:,2),predDataPoints(:,1), 'go');
    LS_PMSE = plot(predDataPoints(:,2),predDataPoints(:,3), 'bo');
    KF_PMSE = plot(predDataPoints(:,2),predDataPoints(:,4), 'ro');
    
    % Drawing 45 degree line for people to see
    x = 0:3;
    plot(x,x,'k--')
    
    xlabel('Riccati Best Possible Prediction MSE')
    ylabel('Other method Prediction MSEs')
    title('Graph of Prediction')
    grid on;
    hold off;
    legend([TCN_PMSE, LS_PMSE, KF_PMSE], 'MSE of TCN', 'MSE of Least Squares', 'MSE of Kalman Filter');
    
    hold on;
    TCN_EMSE = plot(predDataPoints(:,2),predDataPoints(:,1), 'go');
    LS_EMSE = plot(predDataPoints(:,2),predDataPoints(:,3), 'bo');
    KF_EMSE = plot(predDataPoints(:,2),predDataPoints(:,4), 'ro');
    
    % Drawing 45 degree line for people to see
    x = 0:3;
    plot(x,x,'k--')
    
    xlabel('Riccati Best Possible Prediction MSE')
    ylabel('Other method Prediction MSEs')
    title('Graph of Prediction')
    grid on;
    hold off;
    legend([TCN_EMSE, LS_EMSE, KF_PMSE], 'MSE of TCN', 'MSE of Least Squares', 'MSE of Kalman Filter');
    
    disp('test')
end

